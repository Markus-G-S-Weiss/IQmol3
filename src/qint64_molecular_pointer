Layer/MoleculeLayer.C:   jobInfo.set("MoleculePointer", (qint64)this);
Layer/SystemLayer.C:   //jobInfo.set("MoleculePointer", (qint64)this);
Layer/SystemLayer.C:   jobInfo.set("SystemPointer", (qint64)this);
Main/MainWindow.C:       SIGNAL(resultsAvailable(QString const&, QString const&, qint64)),
Main/MainWindow.C:       &m_viewerModel, SLOT(open(QString const&, QString const&, qint64)));

Parser/ParseJobFiles.C:ParseJobFiles::ParseJobFiles(QString const& filePath, QString const& filter, qint64 molPtr) : 

Parser/ParseJobFiles.h:            qint64 moleculePointer = 0);
Parser/ParseJobFiles.h:         qint64 moleculePointer() const { return m_moleculePointer; }
Parser/ParseJobFiles.h:         qint64 m_moleculePointer;

Process/JobMonitor.C:                          job->get<qint64>("MoleculePointer"));
Process/JobMonitor.C:                    job->get<qint64>("MoleculePointer"));
Process/JobMonitor.h:         void resultsAvailable(QString const& path, QString const& filter, qint64 molPtr);

Viewer/ViewerModel.C:void ViewerModel::open(QString const& filePath, QString const& filter, qint64 moleculePointer)
Viewer/ViewerModel.C:   qint64 systemPointer(parser->moleculePointer());
Viewer/ViewerModel.C:             if (system && (qint64)system == systemPointer) {
Viewer/ViewerModel.C:   qint64 moleculePointer(parser->moleculePointer());
Viewer/ViewerModel.C:             if (mol && (qint64)mol == moleculePointer) {
Viewer/ViewerModel.h:            qint64 moleculePointer = 0);
